'''Optical Standards for use with IMACS'''

from astropy.coordinates import SkyCoord
from astropy import units as u
from datetime import date
import numpy as np

raw = {'QWFCCD':[
("201","LTT377","00:41:46.6","-33:39:10"),
("202","LTT1020","01:54:49.7","-27:28:29"),
("203","EG21","03:10:30.4","-68:36:05"),
("204","LTT1788","03:48:22.2","-39:08:35"),
("205","LTT2415","05:56:24.2","-27:51:26"),
("206","Hilt600","06:45:13.5","+02:08:15"),
("207","L745-46A","07:40:20.9","-17:24:42"),
("208","LTT3218","08:41:33.6","-32:56:55"),
("209","LTT3864","10:32:13.8","-35:37:42"),
("210","LTT4364","11:45:50.0","-64:50:30"),
("211","Feige56","12:06:39.7","+11:40:39"),
("212","LTT4816","12:38:50.7","-49:47:58"),
("213","CD-32","14:11:46.3","-33:03:15"),
("214","LTT6248","15:38:59.8","-28:35:34"),
("215","EG274","16:23:33.7","-39:13:48"),
("216","LTT7379","18:36:26.2","-44:18:37"),
("217","LTT7987","20:10:57.1","-30:13:03"),
("218","LTT9239","22:52:40.9","-20:35:27"),
("219","Feige110","23:19:58.3","-05:09:56"),
("220","LTT9491","23:19:35.2","-17:05:28")],
'QSWO':[
("301","CSF01","00 56 47","+00 38 34"),
("302","CSF02","01 54 48","+00 43 11"),
("303","CSF03","02 30 17","+05 15 51"),
("304","CSF04","02 57 33","+00 17 38"),
("305","CSF06","03 53 08","+00 16 27"),
("306","CSF08","03 54 51","+00 07 40"),
("307","CSF09","03 55 54","+00 07 51"),
("308","CSF10","04 51 42","-00 10 09"),
("309","CSF11","04 52 59","-00 14 22"),
("310","CSF12","06 52 03","-00 27 20"),
("311","CSF13","07 24 15","-00 32 47"),
("312","CSF14","07 29 58","-02 06 38"),
("313","CSF15","08 52 34","-00 39 48"),
("314","CSF16","08 53 45","-00 34 30"),
("315","CSF18","10 33 42","-11 41 38"),
("316","CSF19","10 50 05","-00 01 11"),
("317","CSF20","11 08 04","-05 11 33"),
("318","CSF21","13 42 19","+01 30 18"),
("319","CSF22","13 58 51","-02 54 52"),
("320","CSF23","16 37 47","-00 33 05"),
("321","CSF24","17 44 12","-00 24 46"),
("322","CSF25","17 45 25","-00 23 47"),
("323","CSF26","18 43 12","+00 29 21"),
("324","CSF27","20 42 17","+00 07 38"),
("325","CSF28","20 42 46","+00 16 08"),
("326","CSF29","21 52 25","+02 23 21"),
("327","CSF30","22 41 30","+01 11 11"),
("328","CSF31","23 12 21","+10 47 04"),
#("329","PS15","12 06 50","02 01 42"),
#("330","PS14","12 41 52","17 31 20"),
#("331","PS13","11 10 59","-17 09 54"),
#("332","PS12","10 24 31","-00 32 07"),
#("333","PS11","08 15 09","07 31 46"),
#("334","PS10","05 57 01","-16 35 12"),
#("335","PS08","04 10 54","-06 30 28"),
#("336","PS07","02 28 17","-08 27 16"),
#("337","PS06","01 03 22","-00 20 48"),
#("338","PS05","05 52 28","15 53 16"),
#("339","PS04","03 32 33","-27 51 48"),
#("340","PS03","12 57 02","22 01 52"),
#("341","PS02","21 32 16","00 15 15"),
#("342","PS01","16 18 14","00 00 09"),
#("343","PS16","13 02 34","10 12 39"),
#("344","PS17","13 14 45","-03 14 16"),
#("345","PS18","15 14 21","00 47 53"),
#("346","PS19","16 38 00","00 47 18"),
#("347","PS20","20 37 22","-05 13 03"),
#("348","PS21","21 01 51","-05 45 51"),
#("349","PS22","23 19 58","-05 09 56"),
#("350","PS23","23 29 41","00 11 08")
]}

def addStandards(data, queue='QFCCD'):
   '''Add standards to the data dictionary. Optionally takes 'inst'
   as instrument nae'''
   for (id,name,ra,dec) in raw[queue]:
      coord = SkyCoord(ra,dec, unit=(u.hourangle, u.degree))
      RA = coord.ra.to('hourangle').value
      DE = coord.dec.to('degree').value
      idx = np.searchsorted(data['RA'], RA)

      for key in data:
         if key == 'RA':
            data[key].insert(idx, RA)
         elif key == 'DE':
            data[key].insert(idx, DE)
         elif key == 'ID':
            data[key].insert(idx,id)
         elif key == "Name":
            data[key].insert(idx, name)
         elif key == "comm":
            data[key].insert(idx,"Standard")
         elif key == "priority":
             data[key].insert(idx, "Standard")
         else:
            if data[key][-1] is None:
               data[key].insert(idx, None)
            elif isinstance(data[key][-1], date):
               data[key].insert(idx,date(2024,1,1))
            else:
               data[key].insert(idx,data[key][-1]*0)


